name: Build & Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-macos:
    name: macOS Build (App + DMG)
    runs-on: macos-14
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode.app
          xcodebuild -version

      - name: Cache Swift build
        uses: actions/cache@v4
        with:
          path: .build
          key: swift-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            swift-${{ runner.os }}-

      - name: Cache Homebrew downloads
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            /usr/local/Homebrew/Library/Taps
          key: brew-${{ runner.os }}-${{ hashFiles('Package.swift') }}
          restore-keys: |
            brew-${{ runner.os }}-

      - name: Install libfido2 (Homebrew)
        run: |
          brew update -q
          if ! brew list libfido2 >/dev/null 2>&1; then
            brew install libfido2
          else
            brew upgrade libfido2 || true
          fi
          brew info libfido2

      - name: Resolve Swift dependencies
        run: swift package resolve

      - name: Run unit tests
        run: swift test --enable-code-coverage --parallel

      - name: Archive code coverage
        if: always()
        run: |
          mkdir -p artifacts/codecov
          if [ -d .build/debug/codecov ]; then
            cp -R .build/debug/codecov artifacts/
          fi
          if [ -d .build/debug/coverage ]; then
            cp -R .build/debug/coverage artifacts/
          fi

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: swift-code-coverage
          path: artifacts
          if-no-files-found: warn

      - name: Build release binaries
        run: swift build -c release

      - name: Build .app bundle
        run: bash ./scripts/build_app.sh

      - name: Create DMG
        run: bash ./scripts/create_dmg.sh

      - name: List outputs
        run: |
          ls -R .build/release | head -100
          ls -lh FidoPass.dmg

      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: FidoPass-app-bundle
          path: .build/release/FidoPass.app

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: FidoPass-dmg
          path: FidoPass.dmg
          if-no-files-found: error

  release:
    name: Release (tag)
    needs: build-macos
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-14
    permissions:
      contents: write
    steps:
      - name: Download DMG Artifact
        uses: actions/download-artifact@v4
        with:
          name: FidoPass-dmg
          path: dist

      - name: Generate checksums
        run: |
          cd dist
          shasum -a 256 FidoPass.dmg > FidoPass.dmg.sha256
          cat FidoPass.dmg.sha256

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/FidoPass.dmg
            dist/FidoPass.dmg.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
